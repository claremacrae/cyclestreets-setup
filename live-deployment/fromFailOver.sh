#!/bin/bash
#	Used to restore live machine from backups generated by failover - when failover is acting as the live machine
#	Uses output from the toLive script
#
# Run as the cyclestreets user (a check is peformed after the config file is loaded).

### Stage 1 - general setup

# Ensure this script is NOT run as root (it should be run as cyclestreets)
if [ "$(id -u)" = "0" ]; then
    echo "#	This script must NOT be run as root." 1>&2
    exit 1
fi


# Bomb out if something goes wrong
set -e

### CREDENTIALS ###

# Get the script directory see: http://stackoverflow.com/a/246128/180733
# The multi-line method of geting the script directory is needed because this script is likely symlinked from cron
SOURCE="${BASH_SOURCE[0]}"
DIR="$( dirname "$SOURCE" )"
while [ -h "$SOURCE" ]
do 
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd )"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Use this to remove the ../
ScriptHome=$(readlink -f "${DIR}/..")

# Name of the credentials file
configFile=${ScriptHome}/.config.sh

# Generate your own credentials file by copying from .config.sh.template
if [ ! -x ${configFile} ]; then
    echo "#	The config file, ${configFile}, does not exist or is not excutable - copy your own based on the ${configFile}.template file."
    exit 1
fi

# Load the credentials
. ${configFile}


## Main body of script

# Ensure this script is run as cyclestreets user
if [ ! "$(id -nu)" = "${username}" ]; then
    echo "#	This script must be run as user ${username}, rather than as $(id -nu)."
    exit 1
fi

# Logging
echo "$(date)	CycleStreets fromFailOver $(id)"


#	Download and restore the CycleStreets database.
#	This section is simlar to failover-deployment/daily-update.sh
#	Folder locations
server=${failoverServer}
dumpPrefix=failover

# Restore recent data
. ${ScriptHome}/utility/restore-recent.sh

# Restart the pseudoCron at today's date
${superMysql} cyclestreets -e "update map_config set pseudoCron = curdate();";

# Restore these cronjobs - note the timings of these should be the same as in the run.sh
cat <(crontab -l) <(echo "4 1 * * * ${ScriptHome}/live-deployment/daily-dump.sh") | crontab -
cat <(crontab -l) <(echo "34 1 * * * ${ScriptHome}/live-deployment/install-routing-data.sh") | crontab -

# Finish
echo "$(date)	All done"

# End of file
